{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/animations/app.animation.ts","webpack:///src/app/app-routing/app-routing.module.ts","webpack:///src/app/app-routing/routes.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/contact/contact.component.ts","webpack:///src/app/contact/contact.component.html","webpack:///src/app/directives/highlight.directive.ts","webpack:///src/app/dishdetail/dishdetail.component.ts","webpack:///src/app/dishdetail/dishdetail.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/services/dish.service.ts","webpack:///src/app/services/feedback.service.ts","webpack:///src/app/services/leader.service.ts","webpack:///src/app/services/process-httpmsg.service.ts","webpack:///src/app/services/promotion.service.ts","webpack:///src/app/shared/baseurl.ts","webpack:///src/app/shared/feedback.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","leaderService","BaseURL","getLeaders","subscribe","leaders","selector","templateUrl","styleUrls","host","animations","visibility","transform","opacity","flyInOut","expand","AppRoutingModule","forRoot","imports","declarations","routes","path","component","redirectTo","pathMatch","AppComponent","title","AppModule","provide","useValue","providers","entryComponents","bootstrap","ContactComponent","fb","feedbackService","contactType","formErrors","validationMessages","createForm","submitted","sf","gf","feedbackForm","group","firstname","required","minLength","maxLength","lastname","telnum","pattern","email","agree","contacttype","message","valueChanges","data","onValueChanged","form","field","hasOwnProperty","control","get","dirty","valid","messages","key","errors","feedback","value","console","log","submitFeedback","setTimeout","errmess","errMess","feedbackFormDirective","resetForm","HighlightDirective","el","renderer","addClass","nativeElement","removeClass","DishdetailComponent","dishService","route","location","fbc","myModel","formcommentErrors","createCommentForm","commentForm","nameuser","ycomment","maslider","onCommentValueChanged","getDishIds","dishIds","params","pipe","getDish","dish","dishcopy","setPrevNext","dishId","index","indexOf","prev","length","next","back","comment","d","Date","n","toISOString","comments","push","rating","author","date","putDish","reset","FooterComponent","HeaderComponent","dialog","open","width","height","openLoginForm","HomeComponent","promotionService","getFeaturedDish","disherrMess","getFeaturedPromotion","promotion","promotionerrMess","getFeaturedLeader","leader","leadererrMess","LoginComponent","dialogRef","user","username","password","remember","close","onSubmit","MenuComponent","getDishes","dishes","DishService","http","processHTTPMsgService","handleError","map","error","httpOptions","headers","put","providedIn","FeedbackService","post","LeaderService","ProcessHTTPMsgService","errMsg","ErrorEvent","status","statusText","PromotionService","promotions","getPromotions","baseURL","Feedback","ContactType","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Inject } from '@angular/core';\nimport{Leader} from'../shared/leader';\nimport {LeaderService } from '../services/leader.service';\nimport { flyInOut, expand} from'../animations/app.animation';\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n  host: {\n       '[@flyInOut]':'true',\n       'style':'display:block;'\n  },\n  animations:[\n    flyInOut(),\n    expand()\n  ]\n})\nexport class AboutComponent implements OnInit {\nleaders:Leader[];\n  constructor(private leaderService:LeaderService,\n    @Inject('BaseURL') public BaseURL) { }\n  \n\n  ngOnInit(): void {\n    this.leaderService.getLeaders().subscribe((leaders)=> this.leaders=leaders);\n  }\n\n}\n","<div class=\"container\"\n  fxLayout=\"column\"\n  fxLayoutGap=\"10px\">\n\n  <div fxFlex>\n    <div>\n        <h3>About Us</h3>\n        <hr>\n    </div>\n  </div>\n\n  <div fxFlex>\n    <div fxLayout=\"column\" fxLayout.gt-sm=\"row\">\n      <div fxFlex=\"70\">\n        <h2>Our History</h2>\n        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n      </div>\n      <div fxFlex=\"30\">\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title>\n            <h2>Facts At a Glance</h2>\n            </mat-card-title>\n          </mat-card-header>\n          <mat-card-content>\n            <dl>\n              <dt>Started</dt>\n              <dd>3 Feb. 2013</dd>\n              <dt>Major Stake Holder</dt>\n              <dd>HK Fine Foods Inc.</dd>\n              <dt>Last Year's Turnover</dt>\n              <dd>$1,250,375</dd>\n              <dt>Employees</dt>\n              <dd>40</dd>\n            </dl>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n  \n  <div fxFlex>\n    <mat-card>\n      <blockquote>\n        <h3>You better cut the pizza in four pieces because\n            I'm not hungry enough to eat six.</h3>\n        <footer>-- Yogi Berra,\n          <cite>The Wit and Wisdom of Yogi Berra,\n            P. Pepe, Diversion Books, 2014</cite>\n        </footer>\n      </blockquote>\n    </mat-card>\n  </div>\n\n\n  <div fxFlex>\n    <h2>Corporate Leadership</h2>\n    <mat-list *ngIf=\"leaders\" [@expand]>\n    <mat-list-item *ngFor=\"let leader of leaders\" >\n        <img mat-list-avatar src=\"{{BaseURL + leader.image}}\" alt={{leader.name}} >\n      \n                 <h4 matLine> {{leader.name}} {{leader.abbr| uppercase}}</h4>\n                  <p matLine>{{leader.designation}}</p>\n                 <p matLine>{{leader.description}}</p> \n                \n       \n        </mat-list-item>\n    </mat-list>\n\n  <div [hidden]=\"leaders\">\n    <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\n  </div>\n</div>\n</div>\n","import { trigger, state, style, animate, transition } from '@angular/animations';\r\n\r\nexport function visibility() {\r\n    return trigger('visibility', [\r\n        state('shown', style({\r\n            transform: 'scale(1.0)',\r\n            opacity: 1\r\n        })),\r\n        state('hidden', style({\r\n            transform: 'scale(0.5)',\r\n            opacity: 0\r\n        })),\r\n        transition('* => *', animate('0.5s ease-in-out'))\r\n    ]);\r\n}\r\n\r\nexport function flyInOut() {\r\n    return trigger('flyInOut', [\r\n        state('*', style({ opacity: 1, transform: 'translateX(0)'})),\r\n        transition(':enter', [\r\n            style({ transform: 'translateX(-100%)', opacity: 0 }),\r\n            animate('500ms ease-in')\r\n        ]),\r\n        transition(':leave', [\r\n            animate('500ms ease-out', style({ transform: 'translateX(100%)', opacity: 0}))\r\n        ])\r\n    ]);\r\n}\r\n\r\nexport function expand() {\r\n    return trigger('expand', [\r\n        state('*', style({ opacity: 1, transform: 'translateX(0)' })),\r\n        transition(':enter', [\r\n            style({ transform: 'translateY(-50%)', opacity:0 }),\r\n            animate('200ms ease-in', style({ opacity: 1, transform: 'translateX(0)' }))\r\n        ])\r\n    ]);\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { routes } from './routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class AppRoutingModule { }","import { Routes } from '@angular/router';\r\n\r\nimport { MenuComponent } from '../menu/menu.component';\r\nimport { DishdetailComponent } from '../dishdetail/dishdetail.component';\r\nimport { HomeComponent } from '../home/home.component';\r\nimport { AboutComponent } from '../about/about.component';\r\nimport { ContactComponent } from '../contact/contact.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: 'home',  component: HomeComponent },\r\n  { path: 'menu',     component: MenuComponent },\r\n  { path: 'dishdetail/:id',     component: DishdetailComponent },\r\n  { path: 'contactus',     component: ContactComponent },\r\n  { path: 'aboutus',     component: AboutComponent },\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' }\r\n];","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'conFusion';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport{ MatToolbarModule } from '@angular/material/toolbar';\nimport{ FlexLayoutModule } from '@angular/flex-layout';\nimport{ MatListModule } from '@angular/material/list';\nimport {MatGridListModule }from '@angular/material/grid-list'\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { RouterModule } from '@angular/router';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule} from'@angular/material/card';\nimport { MatButtonModule}from '@angular/material/button';\nimport {MatFormFieldModule, matFormFieldAnimations} from '@angular/material/form-field';\nimport{ MatInputModule } from '@angular/material/input';\nimport {MatCheckboxModule } from '@angular/material/checkbox';\nimport {MatSelectModule } from '@angular/material/select';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {FormsModule } from '@angular/forms';\nimport {ReactiveFormsModule } from '@angular/forms/';\nimport { MatSliderModule } from '@angular/material/slider'\nimport 'hammerjs';\nimport {  HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GestureConfig } from '@angular/material/core';\nimport {baseURL}  from'./shared/baseurl';\n\n\nimport { from } from 'rxjs';\nimport { DishdetailComponent } from './dishdetail/dishdetail.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { ContactComponent } from './contact/contact.component'\nimport { MenuComponent } from './menu/menu.component';\nimport { AppComponent } from './app.component';\nimport {DishService } from './services/dish.service';\nimport {PromotionService} from './services/promotion.service';\nimport { LeaderService } from './services/leader.service';\nimport { ProcessHTTPMsgService } from './services/process-httpmsg.service';\nimport { LoginComponent } from './login/login.component';\nimport { HighlightDirective } from './directives/highlight.directive';\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    DishdetailComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    AboutComponent,\n    ContactComponent,\n    LoginComponent,\n    HighlightDirective,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    MatListModule,\n    MatToolbarModule,\n    MatGridListModule,\n    MatCardModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    RouterModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    HttpClientModule\n    \n  ],\n  providers: [ DishService, PromotionService, LeaderService, ProcessHTTPMsgService,\n  ,{provide: 'BaseURL', useValue: baseURL}],\n  entryComponents:[\n    LoginComponent,MatDialogModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild,Inject } from '@angular/core';\nimport {FormBuilder,FormGroup,Validators} from '@angular/forms'; \nimport { Feedback,ContactType} from '../shared/feedback';\nimport { FeedbackService } from '../services/feedback.service';\nimport { Observable } from 'rxjs';\nimport{ visibility ,flyInOut, expand} from '../animations/app.animation';\nimport { $ } from 'protractor';\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss'],\n  host: {\n       '[@flyInOut]':'true',\n       'style':'display:block;'\n  },\n  animations:[\n    flyInOut(),\n    expand()\n  ]\n})\nexport class ContactComponent implements OnInit {\n  errMess:string;\n  feedbackForm:FormGroup;\n  feedback: Feedback;\n  contactType = ContactType;\n  feedbackcopy:Feedback;\n  feedbackIds:string[];\n  submitted:boolean;\n sf:boolean;\n gf:boolean;\n@ViewChild('fform') feedbackFormDirective;\n\nformErrors={\n  'firstname': '',\n  'lastname': '',\n  'telnum'  : '',\n  'email'   : '',\n \n};\n \nvalidationMessages = {\n  'firstname': {\n    'required':      'First Name is required.',\n    'minlength':     'First Name must be at least 2 characters long.',\n    'maxlength':     'FirstName cannot be more than 25 characters long.'\n  },\n  'lastname': {\n    'required':      'Last Name is required.',\n    'minlength':     'Last Name must be at least 2 characters long.',\n    'maxlength':     'Last Name cannot be more than 25 characters long.'\n  },\n  'telnum': {\n    'required':      'Tel. number is required.',\n    'pattern':       'Tel. number must contain only numbers.'\n  },\n  'email': {\n    'required':      'Email is required.',\n    'email':         'Email not in valid format.'\n  }\n};\n\nconstructor(private fb:FormBuilder,private feedbackService:FeedbackService, @Inject('BaseURL') public BaseURL) { \n\n    this.createForm();\n   }\n\n  ngOnInit(): void {\nthis.submitted=false;\nthis.sf=false;\nthis.gf=true;\n  }\n\n  createForm()\n  {\n    this.feedbackForm=this.fb.group({\n\n        firstname: ['',[Validators.required,Validators.minLength(2),Validators.maxLength(25)]] ,\n        lastname: ['',[Validators.required,Validators.minLength(2),Validators.maxLength(25)]] ,\n        telnum: [0,[Validators.required,Validators.pattern]] ,\n        email: ['',Validators.required,Validators.email] ,\n        agree: false ,\n        contacttype: 'none' ,\n        message: ''\n      });\n      this.feedbackForm.valueChanges.subscribe(data=>this.onValueChanged(data));\n      this.onValueChanged();//re(set) form validation messages\n  }\n\n  onValueChanged(data?: any) \n  {\n    if (!this.feedbackForm) { return; }\n    const form = this.feedbackForm;\n    for (const field in this.formErrors) \n    {\n      if (this.formErrors.hasOwnProperty(field)) \n      {\n        // clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) \n        {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) \n          {\n            if (control.errors.hasOwnProperty(key)) \n            {\n              this.formErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n \n  onSubmit() {\n    this.gf=false;\n    this.feedback = this.feedbackForm.value;\n    console.log(this.feedback);\n    this.submitted=true;\n    \n    this.feedbackService.submitFeedback(this.feedback)\n      .subscribe(data => {\n       this.feedback = data,setTimeout(() => {\n        this.submitted=false,this.sf=true  }, 2000), setTimeout(() => {\n          this.sf=false,this.gf=true }, 7000); },\n      errmess => { this.feedback = null;  this.errMess = <any>errmess; });\n      \n     \n\n    this.feedbackFormDirective.resetForm();\n   \n  }\n}\n","<div class=\"container\"\n  fxLayout=\"column\"\n  fxLayoutGap=\"10px\">\n\n  <div fxFlex>\n    <div>\n        <h3>Contact Us</h3>\n        <hr>\n    </div>\n  </div>\n\n  <div fxFlex>\n    <h3>Location Information</h3> \n    <div fxLayout=\"column\" fxLayout.gt-sm=\"row\">\n      <div fxFlex=\"50\" fxFlexOffset=\"20px\">\n        <h4>Our Address</h4>\n        <address>\n          121, Clear Water Bay Road<br>\n          Clear Water Bay, Kowloon<br>\n          HONG KONG<br>\n          <i class=\"fa fa-phone\"></i>: +852 1234 5678<br>\n          <i class=\"fa fa-fax\"></i>: +852 8765 4321<br>\n          <i class=\"fa fa-envelope\"></i>: \n                <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n        </address>\n        <p></p>\n        <div>\n          <a mat-raised-button href=\"tel:+85212345678\"><i class=\"fa fa-phone\"></i> Call</a>\n          <a mat-raised-button><i class=\"fa fa-skype\"></i> Skype</a>\n          <a mat-raised-button href=\"mailto:confusion@food.net\"><i class=\"fa fa-envelope-o\"></i> Email</a>\n        </div>\n        </div>\n      <div fxFlex=\"40\">\n        <h4>Map of our Location</h4>\n      </div>\n    </div>\n  </div>\n\n \n\n  <div fxFlex *ngIf=\"gf\" fxFlexOffset=\"10px\" class=\"Form-size\" [@expand]>\n    <h3>Send us your Feedback</h3>\n\n    <form novalidate [formGroup]=\"feedbackForm\" #fform=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n      <p>\n        <mat-form-field class=\"half-width\">\n          <input matInput formControlName=\"firstname\" placeholder=\"First Name\" type=\"text\" maxlength=\"25\" minlength=\"2\" required>\n          <mat-error *ngIf=\"formErrors.firstname\">\n            {{formErrors.firstname}}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"half-width\">\n          <input matInput formControlName=\"lastname\" placeholder=\"Last Name\" type=\"text\" maxlength=\"25\" minlength=\"2\" required>\n          <mat-error *ngIf=\"formErrors.lastname\">\n           {{formErrors.lastname}}\n          </mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field class=\"half-width\">\n          <input matInput formControlName=\"telnum\" placeholder=\"Contact Number\" type=\"tel\" pattern=\"[0-9]*\" required>\n          <mat-error *ngIf=\"formErrors.telnum\">\n            {{formErrors.telnum}}\n          </mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"half-width\">\n          <input matInput formControlName=\"email\" placeholder=\"Email\" type=\"email\" email required>\n          <mat-error *ngIf=\"formErrors.email\">\n            {{formErrors.email}}\n          </mat-error>\n        </mat-form-field>\n      </p>\n      <table class=\"form-size\">\n        <td>\n          <mat-slide-toggle formControlName=\"agree\">May we contact you?</mat-slide-toggle>\n        </td>\n        <td>\n          \n          <mat-select placeholder=\"How?\" formControlName=\"contacttype\">\n            <mat-option *ngFor=\"let ctype of contactType\" [value]=\"ctype\">\n              {{ ctype }}\n            </mat-option>\n          </mat-select>\n        </td>\n        </table>\n      <p>\n        <mat-form-field class=\"full-width\">\n          <textarea matInput formControlName=\"message\" placeholder=\"Your Feedback\" rows=12></textarea>\n        </mat-form-field>\n      </p>\n      <button type=\"submit\" mat-button class=\"background-primary text-floral-white\"\n      [disabled]=\"feedbackForm.invalid\">Submit</button>\n    </form>\n  </div>\n \n  <div [hidden]=\"!submitted\">\n    <mat-spinner></mat-spinner><h4>Submitting . . . Please Wait</h4>\n  </div>\n  <div fxFlex *ngIf=\"sf\" [@expand] >   \n  \n      <h3>Your Submission</h3>\n      \n        <p>First Name: {{this.feedback.firstname}} </p>\n        <p>Last Name: {{this.feedback.lastname}} </p>\n        <p>Tel. Number: {{this.feedback.telnum}}</p>\n        <p>Email: {{this.feedback.email}}</p>\n        <p>Contact You?: {{this.feedback.agree}}</p>\n        <p>How?: {{this.feedback.contacttype}}</p>\n        <p>Feedback: {{this.feedback.message}}</p>\n      \n    \n  </div>\n \n</div>","import { Directive, ElementRef, Renderer2, HostListener  } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n\n  constructor(private el: ElementRef,\n    private renderer: Renderer2) { }\n    @HostListener('mouseenter') onMouseEnter() {\n      this.renderer.addClass(this.el.nativeElement, 'highlight');\n    }\n  \n    @HostListener('mouseleave') onMouseLeave() {\n      this.renderer.removeClass(this.el.nativeElement, 'highlight');\n    }\n}\n","import { Component, OnInit, ViewChild,Inject } from '@angular/core';\nimport {FormBuilder,FormGroup,Validators} from '@angular/forms'; \nimport {Params,ActivatedRoute} from'@angular/router';\nimport { Dish } from '../shared/dish';\nimport { DISHES } from '../shared/dishes';\nimport {Location } from'@angular/common';\nimport { DishService } from '../services/dish.service';\nimport {switchMap } from 'rxjs/operators';\nimport { from } from 'rxjs';\nimport 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { Comment} from '../shared/comment';\nimport{ visibility ,flyInOut, expand} from '../animations/app.animation';\n\n\n@Component({\n  selector: 'app-dishdetail',\n  templateUrl: './dishdetail.component.html',\n  styleUrls: ['./dishdetail.component.scss'],\n  host: {\n       '[@flyInOut]':'true',\n       'style':'display:block;'\n  },\n  animations:[\n    flyInOut(),\n    visibility(),\n    expand()\n  ]  \n})\n\n\nexport class DishdetailComponent implements OnInit {\n  commentForm:FormGroup;\n    dish:Dish;\n   errMess:string;\n   myModel=0;\n    dishIds:string[];\n    prev: string;\n    next:string;\n    rate:Comment;\n    comment: Comment;\n    dishcopy:Dish;\n    cmt:string;\n    date:string;\n    visibility = 'shown';\n    \n    @ViewChild('cform') commentFormDirective;\n  constructor(private dishService:DishService,\n    private route:ActivatedRoute,\n    private location:Location,\n    public fbc:FormBuilder,\n    @Inject('BaseURL') public BaseURL) { \n\n      this.createCommentForm();\n    }\n \n\n\n    createCommentForm():void\n    {     \n      this.commentForm=this.fbc.group({\n          nameuser: ['',[Validators.required,Validators.minLength(2)]] ,\n         ycomment: ['',[Validators.required]],\n         maslider:[5]\n        });\n        this.commentForm.valueChanges.subscribe(data=>this.onCommentValueChanged(data));\n        this.onCommentValueChanged();//re(set) form validation messages\n    }\n    formcommentErrors={\n      'nameuser': '',\n      'ycomment':''\n     \n    };\n\n    validationMessages = {\n      'nameuser': {\n        'required':      'Name is required.',\n        'minlength':     'First Name must be at least 2 characters long.',\n        'maxlength':     'FirstName cannot be more than 25 characters long.'\n      },\n      \n      'ycomment': {\n        'required':      'Comment is required.'\n      },\n      \n      \n    };\n\n    onCommentValueChanged(data?: any) \n  {\n    if (!this.commentForm) { return; }\n    const form = this.commentForm;\n    for (const field in this.formcommentErrors) \n    {\n      if (this.formcommentErrors.hasOwnProperty(field)) \n      {\n        // clear previous error message (if any)\n        this.formcommentErrors[field] = '';\n        const control = form.get(field);\n        if (control && control.dirty && !control.valid) \n        {\n          const messages = this.validationMessages[field];\n          for (const key in control.errors) \n          {\n            if (control.errors.hasOwnProperty(key)) \n            {\n              this.formcommentErrors[field] += messages[key] + ' ';\n            }\n          }\n        }\n      }\n    }\n  }\n  ngOnInit(){\n    this.dishService.getDishIds().subscribe((dishIds)=> this.dishIds = dishIds);  \n    this.route.params.pipe(switchMap((params:Params)=>{this.visibility = 'hidden'; return this.dishService.getDish(params['id']);}))\n      .subscribe((dish) => { this.dish = dish; this.dishcopy=dish; this.setPrevNext(dish.id);this.visibility = 'shown'; },errmess => this.errMess = <any>errmess);\n  }\n\n  setPrevNext(dishId: string)\n  {\n    const index=this.dishIds.indexOf(dishId);\n    this.prev = this.dishIds[(this.dishIds.length + index - 1) % this.dishIds.length];\n    this.next = this.dishIds[(this.dishIds.length + index + 1) % this.dishIds.length];\n  }\n\n  goBack():void\n  {\n    this.location.back();\n  }\n  onSubmit() {\n    this.comment = this.commentForm.value;\n    var d = new Date();\n     var n = d.toISOString();\n    this.myModel;\n    console.log(this.comment);\nthis.dishcopy.comments.push({rating:this.commentForm.get('maslider').value,comment:this.commentForm.get('ycomment').value,author:this.commentForm.get('nameuser').value,date:n});\n   \n    this.dishService.putDish(this.dishcopy)\n      .subscribe(dish => {\n        this.dish = dish; this.dishcopy = dish;\n      },\n      errmess => { this.dish = null; this.dishcopy = null; this.errMess = <any>errmess; });\n    this.commentForm.reset({\n      nameuser: [''],\n      maslider:5, \n      ycomment: ['']\n      \n    });\n   \n  }\n \n}\n","<div class=\"container\"\n    fxLayout=\"row\"\n    fxLayout.sm=\"column\"\n    fxLayout.xs=\"column\"\n    fxLayoutAlign.gt-md=\"center\"\n    fxLayoutGap=\"20px\" \n    fxLayoutGap.xs=\"0\">\n   \n  <div fxFlex=\"40\" *ngIf=\"dish\" [@visibility]=\"visibility\" [@expand]>\n    <mat-card >\n        <mat-card-header>\n        <mat-card-title>\n            <h3>{{dish.name | uppercase}}</h3>\n        </mat-card-title>\n        </mat-card-header >\n        \n        <mat-card-content>\n            <img mat-card-image src=\"{{BaseURL+dish.image}}\" alt=\"{{dish.name}}\">\n            <p>\n                {{dish.description}}\n            </p>\n        </mat-card-content>\n        <mat-card-actions>\n            <button mat-button [routerLink]=\"['/dishdetail', prev]\">\n               <span class=\"fa fa-chevron-left fa-lg\"></span>\n            </button>\n            <button mat-button>\n                Like\n            </button>\n            <button mat-button>\n                Share\n            </button>\n            <button mat-button (click)=\"goBack()\">\n                Back\n            </button>\n            <span class=\"flex-spacer\"></span>\n            <button mat-button [routerLink]=\"['/dishdetail', next]\">\n                <span class=\"fa fa-chevron-right fa-lg\"></span>\n             </button>\n        </mat-card-actions>\n    </mat-card>\n  </div>\n  \n  <div fxLayout=\"column\" >\n   <div fxFlex *ngIf=\"dish\" [@visibility]=\"visibility\" [@expand]>\n            <h3>Comments</h3>\n            <mat-list *ngFor=\"let comment of dish.comments\">\n                <mat-list-item>\n                    <p matLine> {{comment.comment}}</p>\n                    <p matLine> {{comment.rating}} Stars</p>\n                    <p matLine>-- {{comment.author}} {{comment.date | date:'mediumDate'}}</p>\n                </mat-list-item>\n            </mat-list>\n  </div>\n\n\n<div *ngIf=\"dish\" [@visibility]=\"visibility\" [@expand]> \n<div fxFlex *ngIf=\"!formcommentErrors?.nameuser\">\n  <mat-list-item>\n    <p matLine>{{ commentForm.get('ycomment').value }}</p>\n    <p matLine>{{ commentForm.get('maslider').value }} Stars</p>\n    <p matLine>-- {{ commentForm.get('nameuser').value }}</p>\n</mat-list-item>\n</div>\n</div> \n <div fxFlex *ngIf=\"dish\" [@visibility]=\"visibility\" [@expand]>\n  <form novalidate [formGroup]=\"commentForm\" #cform=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <p>\n      <mat-form-field>\n        <input matInput formControlName=\"nameuser\" placeholder=\"Name\" type=\"text\" minlength=\"2\" required>\n        <mat-error *ngIf=\"formcommentErrors.nameuser\">\n          {{formcommentErrors.nameuser}}\n        </mat-error>\n      </mat-form-field>\n    </p>\n        \n       <p > <mat-slider   min=\"1\" max=\"5\" step=\"1\" value=\"5\" thumbLabel tickInterval=\"1\"  formControlName=\"maslider\">\n       </mat-slider> </p>\n      \n    <p>\n      <mat-form-field class=\"full-width\">\n        <textarea matInput formControlName=\"ycomment\" placeholder=\"Your Comment\" rows=12 required></textarea>\n      </mat-form-field>\n      <mat-error *ngIf=\"formcommentErrors.ycomment\">\n        {{formcommentErrors.ycomment}}\n       </mat-error>\n    </p>\n    <button type=\"submit\" mat-button class=\"background-primary text-floral-white\"\n    [disabled]=\"commentForm.invalid\">Submit</button>\n  </form>\n</div>\n</div>\n<div [hidden]=\"dish || errMess\">\n  <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\n</div>\n<div fxFlex *ngIf=\"errMess\">\n  <h2>Error</h2>\n  <h4>{{errMess}}</h4>\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container footer\" \n    fxLayout=\"row wrap\" \n    fxLayout.lt-md=\"column\" \n    fxLayoutAlign=\"center center\" \n    fxLayoutGap=\"10px\">\n\n  <div fxFlex=\"100\" fxFlex.gt-sm=\"50\">\n    <div fxLayout=\"row\">\n      <div fxFlex=\"40\" fxFlexOffset=\"20px\">\n        <h4>Links</h4>\n        <mat-list>\n          <mat-list-item><a mat-button routerLink='/home'>Home</a></mat-list-item>\n          <mat-list-item><a mat-button  routerLink='/aboutus'>About</a></mat-list-item>\n          <mat-list-item><a mat-button routerLink='/menu'>Menu</a></mat-list-item>\n          <mat-list-item><a mat-button routerLink='/contactus'>Contact</a></mat-list-item>\n        </mat-list>\n      </div>\n      <div fxFlex=\"55\">\n        <h4>Our Address</h4>\n        <address style=\"text-size: 80%\">\n          121, Clear Water Bay Road<br> Clear Water Bay, Kowloon<br> HONG KONG<br>\n          <i class=\"fa fa-phone\"></i>: +852 1234 5678<br>\n          <i class=\"fa fa-fax\"></i>: +852 8765 4321<br>\n          <i class=\"fa fa-envelope\"></i>:\n          <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n        </address>\n      </div>\n    </div>\n  </div>\n  <div fxFlex=\"100\" fxFlex.gt-sm=\"45\">\n    <div style=\"text-align:center\">\n      <a mat-icon-button class=\"btn-google-plus\" href=\"http://google.com/+\"><i class=\"fa fa-google-plus fa-lg\"></i></a>\n      <a mat-icon-button class=\"btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i class=\"fa fa-facebook fa-lg\"></i></a>\n      <a mat-icon-button class=\"btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i class=\"fa fa-linkedin fa-lg\"></i></a>\n      <a mat-icon-button class=\"btn-twitter\" href=\"http://twitter.com/\"><i class=\"fa fa-twitter fa-lg\"></i></a>\n      <a mat-icon-button class=\"btn-youtube\" href=\"http://youtube.com/\"><i class=\"fa fa-youtube fa-lg\"></i></a>\n      <a mat-icon-button class=\"btn-mail\" href=\"mailto:\"><i class=\"fa fa-envelope-o fa-lg\"></i></a>\n    </div>\n  </div>\n  <div>\n      <p>© Copyright 2018 Ristorante Con Fusion</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog,MatDialogRef} from '@angular/material/dialog';\nimport { LoginComponent } from '../login/login.component';\n//import { MatDialog } from '@angular/material/dialog';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public dialog:MatDialog) { }\n\n  ngOnInit(): void {\n  }\nopenLoginForm()\n{\n  this.dialog.open(LoginComponent,{width:'500px',height:'450px'});\n}\n}","<mat-toolbar color=\"primary\">\n    <span><img src=\"/assets/images/logo.png\" height=30 width=41></span>\n    <a mat-button routerLink=\"/home\" routerLinkActive='active'><span class=\"fa fa-home fa-lg\"></span> Home</a>\n    <a mat-button routerLink=\"/aboutus\" routerLinkActive='active'><span class=\"fa fa-info fa-lg\"></span> About</a>\n    <a mat-button routerLink=\"/menu\" routerLinkActive='active'><span class=\"fa fa-list fa-lg\"></span> Menu</a>\n    <a mat-button routerLink=\"/contactus\" routerLinkActive='active'><span class=\"fa fa-address-card fa-lg\"></span> Contact</a>\n<span class=\"flex-spacer\"></span>\n<a mat-button (click)=\"openLoginForm()\"><span class=\"fa fa-sign-in fa-lg\"></span> Login</a>\n \n</mat-toolbar>\n\n  <div class=\"container jumbotron\"\n      fxLayout=\"row\"\n      fxLayout.sm=\"column\" \n      fxLayout.xs=\"column\" \n      fxLayoutAlign.xs=\"start center\"\n      fxLayoutAlign.sm=\"start center\" \n      fxLayoutAlign.gt-sm=\"center center\" \n      fxLayoutGap=\"10px\">\n  \n    <div fxFlex fxFlex.gt-sm=\"50%\">\n      <h1>Ristorante Con Fusion</h1>\n      <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations\n        will tickle your culinary senses!</p>\n    </div>\n    <div fxFlex fxFlex.gt-sm=\"20%\">\n      <img src=\"/assets/images/logo.png\" alt=\"Logo\">\n    </div>\n    <div fxFlex></div>\n  </div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {Dish} from '../shared/dish';\nimport {DishService } from '../services/dish.service';\nimport {Promotion} from '../shared/promotion';\nimport {PromotionService } from '../services/promotion.service';\nimport {Leader} from '../shared/leader';\nimport {LeaderService} from '../services/leader.service';\nimport { flyInOut,expand } from '../animations/app.animation';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  host: {\n       '[@flyInOut]':'true',\n       'style':'display:block;'\n  },\n  animations:[\n    flyInOut(),\n    expand()\n  ]\n})\nexport class HomeComponent implements OnInit {\ndish:Dish;\npromotion:Promotion;\nleader:Leader;\ndisherrMess:string;\npromotionerrMess:string;\nleadererrMess:string;\n  constructor(private  dishService: DishService,\n    private leaderService:LeaderService,\n      private promotionService: PromotionService,\n      @Inject('BaseURL') public BaseURL) { }\n\n  ngOnInit(): void {\n    this.dishService.getFeaturedDish().subscribe((dish)=>this.dish=dish,errmess => this.disherrMess = <any>errmess);\n    this.promotionService.getFeaturedPromotion().subscribe((promotion)=>this.promotion=promotion,errmess => this.promotionerrMess = <any>errmess);\n    this.leaderService.getFeaturedLeader().subscribe((leader)=>this.leader=leader,errmess => this.leadererrMess = <any>errmess);\n  }\n\n}\n","<div class=\"container\"\n     fxLayout=\"row\"\n     fxLayout.sm=\"column\"\n     fxLayout.xs=\"column\"\n     fxLayoutAlign.gt-md=\"space-around center\"\n     fxLayoutGap=\"10px\">\n\n<mat-card *ngIf=\"dish\" fxFlex [@expand]>\n  <mat-card-header>\n    <div mat-card-avatar></div>\n    <mat-card-title>\n      <h3>{{dish.name | uppercase}}</h3>\n    </mat-card-title>\n  </mat-card-header>\n  <img mat-card-image src=\"{{BaseURL + dish.image}}\" alt={{dish.name}}>\n  <mat-card-content>\n    <p>{{dish.description}}\n    </p>\n  </mat-card-content>\n</mat-card>\n<div [hidden]=\"dish|| disherrMess\">\n  <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\n</div>\n<div fxFlex *ngIf=\"disherrMess\">\n  <h2>Error</h2>\n  <h4>{{disherrMess}}</h4>\n</div>\n\n<mat-card *ngIf=\"promotion\" fxFlex [@expand]>\n  <mat-card-header>\n    <div mat-card-avatar></div>\n    <mat-card-title>\n      <h3>{{promotion.name | uppercase}}</h3>\n    </mat-card-title>\n  </mat-card-header>\n  <img mat-card-image src=\"{{BaseURL +promotion.image}}\" alt={{promotion.name}}>\n  <mat-card-content>\n    <p>{{promotion.description}}\n    </p>\n  </mat-card-content>\n</mat-card>\n<div [hidden]=\"promotion || promotionerrMess\">\n  <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\n</div>\n\n<div fxFlex *ngIf=\"promotionerrMess\">\n  <h2>Error</h2>\n  <h4>{{promotionerrMess}}</h4>\n</div>\n\n<mat-card *ngIf=\"leader\" fxFlex [@expand]>\n  <mat-card-header>\n    <div mat-card-avatar></div>\n    <mat-card-title>\n      <h3>{{leader.name | uppercase}}</h3>\n    </mat-card-title>\n  </mat-card-header>\n  <img mat-card-image src=\"{{BaseURL +leader.image}}\">\n  <mat-card-content>\n    <p>{{leader.description}}\n    </p>\n  </mat-card-content>\n</mat-card>\n<div [hidden]=\"leader || leadererrMess\">\n  <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\n</div>\n<div fxFlex *ngIf=\"leadererrMess\">\n  <h2>Error</h2>\n  <h4>{{leadererrMess}}</h4>\n</div>\n  \n</div>","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  user={username:'',password:'',remember:false}\n  constructor(public dialogRef:MatDialogRef<LoginComponent>) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit()\n  {\n    console.log('User: ',this.user);\n    this.dialogRef.close();\n  }\n\n}\n","<mat-toolbar color=\"primary\">\nLogin\n<span class=\"flex-spacer\"></span>\n<button mat-button mat-dialog-close>&times;</button>\n</mat-toolbar>\n<p>\n    {{user | json}}\n</p>\n<form novalidate #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" >\n    <mat-dialog-content>\n        <p>\n            <mat-form-field>\n                <input matInput placeholder=\"Username\" type=\"text\"\n                [(ngModel)]=\"user.username\" name=\"username\"\n                #username=\"ngModel\" required>\n                <mat-error *ngIf=\"username.errors?.required\">Username can not be empty</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\"\n                [(ngModel)]=\"user.password\" name=\"password\"\n                #password=\"ngModel\" required>\n                <mat-error *ngIf=\"password.errors?.required\">Password can not be empty</mat-error>\n            </mat-form-field>\n            <mat-checkbox [(ngModel)]=\"user.remember\" name=\"remember\">Remember Me</mat-checkbox>\n        </p>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n        <span class=\"flex-spacer\"></span>\n        <button mat-button mat-dialog-close>Cancel</button>\n        <button mat-button type=\"submit\" class=\"background-primary text-floral-white\"\n        [disabled]=\"loginForm.form.invalid\">Login</button>\n    </mat-dialog-actions>\n</form>","import { Component, OnInit, Inject } from '@angular/core';\nimport{Dish} from'../shared/dish';\nimport {DishService } from '../services/dish.service';\nimport {flyInOut,expand} from '../animations/app.animation';\n\n\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  host: {\n       '[@flyInOut]':'true',\n       'style':'display:block;'\n  },\n  animations:[\n    flyInOut(),\n    expand()\n  ]\n})\nexport class MenuComponent implements OnInit {\n\n  dishes: Dish[];\n  errMess:string;\n\n  constructor(private dishService:DishService,\n    @Inject('BaseURL') public BaseURL) { }\n\n  ngOnInit(): void \n  {\n   this.dishService.getDishes().subscribe((dishes)=> this.dishes=dishes,\n    errmess => this.errMess = <any>errmess);\n  }\n\n}\n","<div class=\"container\"\nfxLayout=\"column\"\nfxLayoutGap=\"10px\">\n<div fxFlex>\n<div>\n<h3>Menu</h3>\n<hr>\n</div>\n</div>\n<div fxFlex *ngIf=\"dishes\" [@expand]>\n<mat-grid-list cols=\"2\" rowHeight=\"200px\">\n<mat-grid-tile *ngFor=\"let dish of dishes\" [routerLink]=\"['/dishdetail', dish.id]\" appHighlight>\n<img height=\"200px\" src=\"{{BaseURL + dish.image}}\" alt={{dish.name}}>\n<mat-grid-tile-footer>\n<h1>{{dish.name | uppercase}}</h1>\n\n</mat-grid-tile-footer>\n</mat-grid-tile>\n</mat-grid-list>\n</div>\n<div fxFlex [hidden]=\"dishes || errMess\">\n    <mat-spinner></mat-spinner> <h4> Loading... please wait!</h4>\n</div>\n<div fxFlex *ngIf=\"errMess\">\n    <h2>Error</h2>\n    <h4>{{errMess}}</h4>\n</div>\n</div>","import { Injectable } from '@angular/core';\nimport {Dish } from '../shared/dish';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {baseURL } from '../shared/baseurl';  \nimport { of, Observable} from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { map,catchError } from 'rxjs/operators';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DishService {\n\n  constructor(private http:HttpClient,\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\n  getDishes():Observable<Dish[]>\n  { \n    return this.http.get<Dish[]>(baseURL + 'dishes')\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n    \n  }\n  getDish(id:string):Observable<Dish>\n  {\n    return this.http.get<Dish>(baseURL + 'dishes/' + id)\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\ngetFeaturedDish():Observable<Dish>\n{\n return this.http.get<Dish[]>(baseURL + 'dishes?featured=true').pipe(map(dishes => dishes[0]))\n .pipe(catchError(this.processHTTPMsgService.handleError));\n}\n\ngetDishIds():Observable<string[] | any> {\n  return this.getDishes().pipe(map(dishes => dishes.map(dish => dish.id)))\n  .pipe(catchError(error=>error));\n}\nputDish(dish: Dish): Observable<Dish> {\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n    })\n  };\n  return this.http.put<Dish>(baseURL + 'dishes/' + dish.id, dish, httpOptions)\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {baseURL } from '../shared/baseurl'; \nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\nimport { Feedback } from '../shared/feedback';\nimport { of, Observable} from 'rxjs';\n\nimport { map,catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n\n  constructor(private http:HttpClient,\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\n    getFeedback():Observable<Feedback[]>\n  { \n    return this.http.get<Feedback[]>(baseURL + 'feedback')\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n    \n  }\n\n  submitFeedback(feedback: Feedback): Observable<Feedback> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n      })\n    };\n    return this.http.post<Feedback>(baseURL + 'feedback', feedback, httpOptions,)\n      .pipe(catchError(this.processHTTPMsgService.handleError));\n  \n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { LEADERS } from '../shared/leaders';\nimport {Leader } from '../shared/leader';\nimport { of,Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {baseURL } from '../shared/baseurl';  \nimport { map,catchError } from 'rxjs/operators';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\nimport { delay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaderService {\n\n  constructor(private http:HttpClient,\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\n  getLeaders():Observable<Leader[]>\n  {\n    return this.http.get<Leader[]>(baseURL + 'leadership')\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n      \n  }\n  getLeader(id:string): Observable<Leader>\n  {\n    return this.http.get<Leader>(baseURL + 'leadership/' + id)\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n  }\n  getFeaturedLeader():Observable<Leader>\n{\n return this.http.get<Leader[]>(baseURL + 'leadership?featured=true').pipe(map(leaders => leaders[0]))\n .pipe(catchError(this.processHTTPMsgService.handleError));\n}\n\n\ngetLeaderIds():Observable<string[] | any> {\n  return this.getLeaders().pipe(map(leaders => leaders.map(leader => leader.id)))\n  .pipe(catchError(error=>error));\n}\nputLeader(leader: Leader): Observable<Leader> {\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n    })\n  };\n  return this.http.put<Leader>(baseURL + 'leaders/' + leader.id, leader, httpOptions)\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n\n}\n}\n","import { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProcessHTTPMsgService {\n\n  constructor() { }\n\n  public handleError(error: HttpErrorResponse | any) {\n    let errMsg: string;\n\n    if (error.error instanceof ErrorEvent) {\n      errMsg = error.error.message;\n    } else {\n      errMsg = `${error.status} - ${error.statusText || ''} ${error.error}`;\n    }\n\n    return throwError(errMsg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Promotion } from '../shared/promotion';\nimport {PROMOTIONS} from '../shared/promotions';\nimport { of, Observable } from 'rxjs';\nimport {delay } from 'rxjs/operators';\nimport {baseURL } from '../shared/baseurl';  \nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map,catchError } from 'rxjs/operators';\nimport { ProcessHTTPMsgService } from './process-httpmsg.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PromotionService {\n\n  constructor(private http:HttpClient,\n    private processHTTPMsgService: ProcessHTTPMsgService) { }\n  getPromotions():Observable<Promotion[]>\n  {\n    return this.http.get<Promotion[]>(baseURL + 'promotions')\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n    \n  }\n  getPromotion(id:string): Observable<Promotion>\n  {\n    return this.http.get<Promotion>(baseURL + 'promotions/' + id)\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n  \n  }\ngetFeaturedPromotion():Observable<Promotion>\n{\n return this.http.get<Promotion[]>(baseURL + 'promotions?featured=true').pipe(map(promotions => promotions[0]))\n  .pipe(catchError(this.processHTTPMsgService.handleError));\n}\n\ngetPromotionIds():Observable<string[] | any> {\n  return this.getPromotions().pipe(map(promotions => promotions.map(promotion => promotion.id)))\n  .pipe(catchError(error=>error));\n}\nputDish(promotion: Promotion): Observable<Promotion> {\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n    })\n  };\n  return this.http.put<Promotion>(baseURL + 'promotions/' + promotion.id, promotion, httpOptions)\n    .pipe(catchError(this.processHTTPMsgService.handleError));\n\n}\n\n}\n","export const baseURL = 'http://localhost:3004/';","export class Feedback\r\n{\r\n    firstname :string;\r\n    lastname :string;\r\n    telnum : number;\r\n    email  : string;\r\n    agree  : boolean;\r\n    contacttype: string;\r\n    message :string;\r\n}\r\n\r\nexport const ContactType=['None','Tel','Email'];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}